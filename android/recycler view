//1 add recyclerview to activity_main.xml and give it an ID

//2 go to Res folder>right click>create a new resource file>layout_listitem.xml

// --- layout_listitem.xml ---

<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:id="@+id/parent_layout">
    >


    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Canada"
        android:id="@+id/item_name"
        />

</android.support.constraint.ConstraintLayout>

// --- MainActivity.java ---

package com.example.yakir.simplerecycler;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    //the type of list
    private ArrayList<String> items = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //add the items to the list (array list)
        addToList();
        //start the views and the context with the adapter
        initRecyclerView();
    }

    public void addToList(){
        items.add("Potatoes");
        items.add("Tomatoes");
        items.add("Water");
    }
    private void initRecyclerView(){
        RecyclerView recyclerView = findViewById(R.id.recycler_view);
        //pass the arrays (data) and the context
        RecyclerViewAdapter adapter = new RecyclerViewAdapter(items,this);
        recyclerView.setAdapter(adapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
    }
}

// --- RecyclerViewAdapter.java ---

package com.example.yakir.simplerecycler;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.constraint.ConstraintLayout;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;

public class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.ViewHolder>{

    //the variables we need for this class
    private ArrayList<String> itemNames = new ArrayList<>();
    private Context mContext;

    public RecyclerViewAdapter(ArrayList<String> itemNames, Context mContext) {
        this.itemNames = itemNames;
        this.mContext = mContext;
    }


    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        //here we are holding the view
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_listitem,parent,false);
        //creating an object of the inner class
        ViewHolder holder = new ViewHolder(view);
        return holder;
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, final int position) {
        //called with every item that is being populated
        holder.itemName.setText(itemNames.get(position));
        holder.parent_layout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //action listener for clicking on the item
                Toast.makeText(mContext,""+itemNames.get(position),Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    public int getItemCount() {
        return itemNames.size();
    }

    //holding each entry in memory, hence we declare all the needed views here to put in the entire view of each entry
    public class ViewHolder extends RecyclerView.ViewHolder{

        TextView itemName;
        ConstraintLayout parent_layout;

        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            //initializing the views
            itemName = itemView.findViewById(R.id.item_name);
            parent_layout = itemView.findViewById(R.id.parent_layout);
        }
    }
}



