// ---- main activity ----

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    Button addButton;
    Button removeButton;
    EditText inputText;
    TextView yakirsText;
    MyDBHandler dbHandler;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        addButton = (Button)findViewById(R.id.addButton);
        removeButton = (Button)findViewById(R.id.removeButton);
        inputText = (EditText)findViewById(R.id.yakirsInput);
        yakirsText = (TextView)findViewById(R.id.yakirTextView);

        dbHandler = new MyDBHandler(this,null,null,1);

        printDatabase();


    }

    public void printDatabase(){
        String dbString = dbHandler.databaseToString();
        yakirsText.setText(dbString);
        inputText.setText("");

    }

    public void addButtonClicked(View view){
        Products product = new Products(inputText.getText().toString());
        dbHandler.addProduct(product);
        printDatabase();
    }

    public void removeButtonClicked(View view){
        String text = inputText.getText().toString();
        dbHandler.deleteProduct(text);
        printDatabase();
    }
}

// ---- MyDBHandler ----

package com.example.yakir.simpledb;

// This class handles all the database activities

import android.database.sqlite.SQLiteDatabase;

import android.database.sqlite.SQLiteOpenHelper;

import android.database.Cursor;

import android.content.Context;

import android.content.ContentValues;

import com.example.yakir.simpledb.Products;


public class MyDBHandler extends SQLiteOpenHelper{

    private static final int DATABASE_VERSION = 1;

    //db file name
    private static final String DATABASE_NAME = "productDB.db";

    //table name
    public static final String TABLE_PRODUCTS = "products";

    //every column
    public static final String COLUMN_ID = "_id";

    public static final String COLUMN_PRODUCTNAME = "productname";



    //We need to pass database information along to superclass

    public MyDBHandler(Context context, String name, SQLiteDatabase.CursorFactory factory, int version) {

        super(context, DATABASE_NAME, factory, DATABASE_VERSION);

    }



    @Override

    //first time a table is created
    public void onCreate(SQLiteDatabase db) {

        String query = "CREATE TABLE " + TABLE_PRODUCTS + "(" +

                COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +

                COLUMN_PRODUCTNAME + " TEXT " +

                ");";

        db.execSQL(query);

    }

    //Lesson 51

    @Override

    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

        db.execSQL("DROP TABLE IF EXISTS " + TABLE_PRODUCTS);

        onCreate(db);

    }



    //Add a new row to the database

    public void addProduct(Products product){

        ContentValues values = new ContentValues();

        values.put(COLUMN_PRODUCTNAME, product.get_productname());

        SQLiteDatabase db = getWritableDatabase();

        db.insert(TABLE_PRODUCTS, null, values);

        db.close();

    }



    //Delete a product from the database

    public void deleteProduct(String productName){

        SQLiteDatabase db = getWritableDatabase();

        db.execSQL("DELETE FROM " + TABLE_PRODUCTS + " WHERE " + COLUMN_PRODUCTNAME + "=\"" + productName + "\";");

    }



    // this is goint in record_TextView in the Main activity.

    public String databaseToString(){

        String dbString = "";

        SQLiteDatabase db = getWritableDatabase();

        String query = "SELECT * FROM " + TABLE_PRODUCTS + " WHERE 1";// why not leave out the WHERE  clause?



        //Cursor points to a location in your results

        Cursor recordSet = db.rawQuery(query, null);

        //Move to the first row in your results

        recordSet.moveToFirst();



        //Position after the last row means the end of the results

        while (!recordSet.isAfterLast()) {

            // null could happen if we used our empty constructor

            if (recordSet.getString(recordSet.getColumnIndex("productname")) != null) {

                dbString += recordSet.getString(recordSet.getColumnIndex("productname"));

                dbString += "\n";

            }

            recordSet.moveToNext();

        }

        db.close();

        return dbString;

    }



}

// ---- Products ----

package com.example.yakir.simpledb;

public class Products {

    private int _id;

    private String _productname;



    //Added this empty constructor in lesson 50 in case we ever want to create the object and assign it later.

    public Products(){



    }

    public Products(String productName) {

        this._productname = productName;

    }



    public int get_id() {

        return _id;

    }



    public void set_id(int _id) {

        this._id = _id;

    }



    public String get_productname() {

        return _productname;

    }



    public void set_productname(String _productname) {

        this._productname = _productname;

    }

}

